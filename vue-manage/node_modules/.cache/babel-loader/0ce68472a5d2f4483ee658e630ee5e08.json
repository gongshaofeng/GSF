{"remainingRequest":"/Users/GSF/GSF/vue-manage/node_modules/babel-loader/lib/index.js!/Users/GSF/GSF/vue-manage/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/GSF/GSF/vue-manage/src/components/page/BaseTable.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/GSF/GSF/vue-manage/src/components/page/BaseTable.vue","mtime":1537000256777},{"path":"/Users/GSF/GSF/vue-manage/node_modules/cache-loader/dist/cjs.js","mtime":1534853418000},{"path":"/Users/GSF/GSF/vue-manage/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/GSF/GSF/vue-manage/node_modules/vue-loader/lib/index.js","mtime":1527860006000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.search\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nexport default {\n  name: 'basetable',\n  data: function data() {\n    return {\n      // 初始化的数据\n      tableData: [],\n      // 页面显示的项目数据\n      tableDatas: [],\n      currentPage: 5,\n      // 添加页/文本框行数\n      rowNumber: 5,\n      // 1.1 召唤添加页的开关(默认关闭)\n      addDialogVisible: false,\n      AddName: '',\n      // 项目名称\n      AddCode: '',\n      // 项目编码\n      AddDesc: '',\n      // 项目描述\n      totalCount: '',\n      // 总页数\n      skipCount: 0,\n      // 跳转某一页\n      maxResultCount: 10,\n      // 最大的显示条数\n      pName: '',\n      isTrue: false,\n      // 判断项目编码是够存在\n      search: '' // 搜索框的内容\n\n    };\n  },\n  computed: {\n    Addtime: function Addtime() {\n      return new Date().toLocaleString();\n    }\n  },\n  created: function created() {\n    this.getProlist(); //  项目列表初始化\n  },\n  watch: {\n    // 搜索框的内容发生改变时\n    search: function search() {\n      this.getProlist();\n    }\n  },\n  updated: function updated() {\n    // this.getProlist();  // 添加项目列表时，自动更新\n    this.gettableDate();\n  },\n  methods: {\n    // 项目数据/删除按钮\n    deleteRow: function deleteRow(index, rows) {\n      rows.splice(index, 1); // console.log(index) //表格中数据的下标\n\n      this.gettableDate(), //手动检测数据变化\n      this.deleteDate(index);\n    },\n    deleteDate: function deleteDate(index) {\n      console.log(index);\n      var res = this.tableData[index].id; // 要删除的id\n\n      console.log(res);\n      this.$axios({\n        method: 'delete',\n        url: \"http://localhost:3000/project/\".concat(res)\n      });\n    },\n    // 项目数据/搜索按钮\n    Search: function Search() {\n      // 取到输入框的数据\n      this.serach; // 新建一个空的数组\n\n      var tableList = []; // 将取到的数据和tableDatas中的数据对比\n\n      for (var i = 0; i < this.tableDatas.length; i++) {\n        var a = this.tableDatas[i].pname.search(this.search);\n\n        if (a != -1) {\n          tableList.push(this.tableDatas[i]);\n        }\n      }\n\n      this.tableDatas = tableList;\n    },\n    // 添加页：插入数据\n    createP: function createP() {\n      // 获取json有无相同的项目编码\n      for (var i = 0; i < this.tableDatas.length; i++) {\n        if (this.tableData[i].pid != this.AddCode) {\n          this.isTrue = true;\n        } else {\n          this.isTrue = false;\n        }\n      }\n\n      if (this.isTrue) {\n        // 插入信息\n        this.$axios({\n          method: 'post',\n          url: 'http://localhost:3000/project',\n          data: {\n            pid: this.AddCode,\n            pname: this.AddName,\n            addtime: this.Addtime\n          }\n        });\n      } else {\n        this.$message('添加失败,编码重复或其他原因');\n      }\n\n      console.log(2);\n      this.isT = true;\n      this.addDialogVisible = false; //关闭添加页\n\n      console.log(3);\n    },\n    // 添加页：添加项目\n    AddP: function AddP() {\n      // 验证不能为空\n      if (this.AddName == null || this.AddName == '') {\n        this.$message('请输入项目名称');\n        return false;\n      } else if (this.AddCode == null || this.AddName == '') {\n        this.$message('请输入项目编码');\n        return false;\n      } else if (this.AddDesc == null || this.AddDesc == '') {\n        this.$message('请输入项目介绍');\n        return false;\n      }\n\n      this.createP(); // 创建或驳回\n    },\n    // 获取项目列表\n    getProlist: function getProlist() {\n      var _this = this;\n\n      this.$http.get(\"http://localhost:3000/project\").then(function (result) {\n        if (result) {\n          _this.tableDatas = result.data;\n        } else {\n          alert(\"失败\");\n        }\n      });\n    },\n    // json-server 中的数据\n    gettableDate: function gettableDate() {\n      var _this2 = this;\n\n      this.$http.get(\"http://localhost:3000/project\").then(function (result) {\n        if (result) {\n          _this2.tableData = result.data; // console.log(this.tableData)\n        } else {\n          alert(\"失败\");\n        }\n      });\n    },\n    // 分页栏/页大小\n    handleSizeChange: function handleSizeChange(val) {\n      console.log(\"\\u6BCF\\u9875 \".concat(val, \" \\u6761\"));\n    },\n    // 分页栏/当前页\n    handleCurrentChange: function handleCurrentChange(val) {\n      console.log(\"\\u5F53\\u524D\\u9875: \".concat(val));\n    },\n    // 项目数据/编辑\n    handleEdit: function handleEdit(index, row) {\n      console.log(index, row);\n    }\n  }\n};",{"version":3,"sources":["BaseTable.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"table\">\n        <!-- 表头 -->\n        <div class=\"crumbs\">\n            <!-- 标题 -->\n            <el-breadcrumb separator=\"/\">\n                <el-breadcrumb-item><i class=\"el-icon-menu\"></i> 项目管理</el-breadcrumb-item>\n            </el-breadcrumb>\n            <!-- 搜索框和添加按钮 -->\n            <div class=\"handle-box\">\n                <el-input size=\"medium\"  placeholder=\"请输入项目名称\" style=\"width:300px\" class=\"handle-input mr10\" v-model=\"search\"></el-input>\n                <el-button size=\"medium\" type=\"primary\" icon=\"el-icon-search\" class=\"box-search\" @click=\"Search\" >搜索</el-button>\n                                                                            <!-- 1.2 触发隐藏的添加页 -->\n                <el-button type=\"primary\" size=\"medium\" icon=\"el-icon-plus\" @click=\"addDialogVisible = true\">添加</el-button>\n            </div>\n        </div>\n        <!-- 项目数据 -->\n        <el-table :data=\"tableDatas\" style=\"width: 100% ;padding:0 24px; margin-top: 10px;\" >\n            <el-table-column type=\"index\" label=\"序号\" width=\"50\"></el-table-column>\n            <el-table-column label=\"项目编号\" prop=\"pid\" ></el-table-column>\n            <el-table-column  label=\"项目名称\" prop=\"pname\" ></el-table-column>\n            <el-table-column label=\"创建时间\" prop=\"addtime\" ></el-table-column>\n            <el-table-column label=\"操作\">\n                <template slot-scope=\"scope\">\n                    <el-button\n                        size=\"mini\"\n                        @click=\"handleEdit()\">编辑</el-button>\n                    <el-button\n                        size=\"mini\"\n                        type=\"danger\"\n                        @click.native.prevent=\"deleteRow(scope.$index, tableDatas)\">删除</el-button>\n                </template>\n            </el-table-column>\n        </el-table>\n        <!-- 分页栏 -->\n        <div class=\"block\">\n                <el-pagination background @size-change=\"handleSizeChange\" @current-change=\"handleCurrentChange\"\n                                :current-page.sync=\"currentPage\" :page-size=\"100\"\n                                layout=\"prev, pager, next, jumper\" :total=\"500\" class=\"pagination\">\n                </el-pagination>\n        </div>\n        <!-- 添加页 -->\n        <el-dialog title=\"添加\" :visible.sync=\"addDialogVisible\">\n            <el-form label-width=\"100px\">\n                <el-form-item label=\"项目名称\">\n                    <el-input v-model=\"AddName\" class=\"mrt5\" size=\"small\" placeholder=\"请输入项目名称\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"项目编号\">\n                    <el-input v-model=\"AddCode\" class=\"mrt5\" size=\"small\" placeholder=\"请输入项目编码\"></el-input>\n                </el-form-item>\n                <el-form-item label=\"项目描述\">\n                    <el-input v-model=\"AddDesc\" size=\"small\" :rows=\"rowNumber\" type=\"textarea\" placeholder=\"不多于50个字\" maxlength=50 ></el-input>\n                </el-form-item>\n            </el-form>\n            <div class=\"dialog-footer\">\n                <el-button size=\"medium\" @click=\"addDialogVisible = false\">取&nbsp;消</el-button>\n                <el-button size=\"medium\" type=\"primary\" @click=\"AddP\">确&nbsp;定</el-button>\n            </div>\n        </el-dialog>\n    </div>\n</template>\n<script>\nexport default {\n    name:'basetable',\n    data() {\n        return {\n            // 初始化的数据\n            tableData:[],\n            // 页面显示的项目数据\n            tableDatas: [],\n            currentPage:5,\n            // 添加页/文本框行数\n            rowNumber:5,\n            // 1.1 召唤添加页的开关(默认关闭)\n            addDialogVisible: false,\n            AddName: '',    // 项目名称\n            AddCode: '',    // 项目编码\n            AddDesc: '',    // 项目描述\n            totalCount: '', // 总页数\n            skipCount: 0,   // 跳转某一页\n            maxResultCount: 10, // 最大的显示条数\n            pName: '',\n            isTrue: false,  // 判断项目编码是够存在\n            search: '',     // 搜索框的内容\n        }\n    },\n    computed:{\n        Addtime :function(){\n            return new Date().toLocaleString()\n        }\n    },\n    created(){\n        this.getProlist();  //  项目列表初始化\n    },\n    watch:{\n        // 搜索框的内容发生改变时\n        search:\n            function (){\n                this.getProlist();\n            }\n    },\n    updated(){\n        // this.getProlist();  // 添加项目列表时，自动更新\n        this.gettableDate()\n    },\n    methods: {\n        // 项目数据/删除按钮\n        deleteRow(index, rows) {\n            rows.splice(index, 1);\n            // console.log(index) //表格中数据的下标\n            this.gettableDate(),    //手动检测数据变化\n            this.deleteDate(index)\n        },\n        deleteDate(index){\n            console.log(index)\n            let res = this.tableData[index].id; // 要删除的id\n            console.log(res)\n            this.$axios({\n                method: 'delete',\n                url: `http://localhost:3000/project/${res}`\n            })\n\n        },\n        // 项目数据/搜索按钮\n        Search(){\n            // 取到输入框的数据\n            this.serach\n            // 新建一个空的数组\n            var tableList = [];\n            // 将取到的数据和tableDatas中的数据对比\n            for(var i=0; i<this.tableDatas.length; i++){\n                var a = this.tableDatas[i].pname.search(this.search);\n                if(a != -1){\n                    tableList.push(this.tableDatas[i])\n                }\n            }\n            this.tableDatas =tableList;\n        },\n        // 添加页：插入数据\n        createP(){\n            // 获取json有无相同的项目编码\n            for(var i=0; i<this.tableDatas.length; i++){\n                if(this.tableData[i].pid != this.AddCode){\n                    this.isTrue = true;\n                }else{\n                    this.isTrue = false;\n                }\n            }\n            if(this.isTrue){\n                // 插入信息\n                    this.$axios({\n                        method: 'post',\n                        url: 'http://localhost:3000/project',\n                        data: {\n                            pid: this.AddCode,\n                            pname: this.AddName,\n                            addtime: this.Addtime\n                        }\n                    });\n            }else{\n                this.$message('添加失败,编码重复或其他原因')\n            }\n            console.log(2)\n            this.isT=true;\n            this.addDialogVisible=false;    //关闭添加页\n            console.log(3)\n        },\n        // 添加页：添加项目\n        AddP(){\n            // 验证不能为空\n            if(this.AddName == null || this.AddName == ''){\n                this.$message('请输入项目名称');\n                return false;\n            }else\n            if(this.AddCode == null || this.AddName == ''){\n                this.$message('请输入项目编码');\n                return false;\n            }else\n            if(this.AddDesc == null || this.AddDesc == ''){\n                this.$message('请输入项目介绍');\n                return false;\n            }\n            this.createP(); // 创建或驳回\n        },\n        // 获取项目列表\n        getProlist(){\n            this.$http.get(\"http://localhost:3000/project\")\n                .then(result=>{\n                    if(result){\n                        this.tableDatas = result.data;\n                    }else{\n                        alert(\"失败\")\n                    }\n                })\n        },\n        // json-server 中的数据\n        gettableDate(){\n            this.$http.get(\"http://localhost:3000/project\")\n                .then(result=>{\n                    if(result){\n                        this.tableData = result.data;\n                        // console.log(this.tableData)\n                    }else{\n                        alert(\"失败\")\n                    }\n                })\n        },\n        // 分页栏/页大小\n        handleSizeChange(val) {\n            console.log(`每页 ${val} 条`);\n        },\n        // 分页栏/当前页\n        handleCurrentChange(val) {\n            console.log(`当前页: ${val}`);\n        },\n        // 项目数据/编辑\n        handleEdit(index, row) {\n            console.log(index, row);\n        },\n\n    }\n}\n\n\n</script>\n<style scoped>\n.table {\n    padding: 20px;\n}\n.box-search {\n    margin-left: 10px;\n}\n.handle-box{\n    margin-top: 20px;\n}\n.handle-select{\n    width: 150px;\n}\n.handle-input{\n    width: 150px;\n    display: inline-block;\n}\n.pagination{\n    display: flex;\n    justify-content: center;\n    margin-top: 50px;\n}\n.mrt5{\n    margin-top: 5px;\n}\n</style>\n"],"sourceRoot":"src/components/page"}]}